@model IEnumerable<StaffFrontend.Models.Review>

@{
    ViewData["Title"] = "Index";
}

<div asp-validation-summary="ModelOnly" class="text-danger"></div>
<h1>Index</h1>


@if (Context.Request.Query["hidden"] == "false" || Context.Request.Query["hidden"] == Microsoft.Extensions.Primitives.StringValues.Empty)
{
    <a href="?hidden=true">Show Hidden Reviews</a>
}
else
{
    <a href="?hidden=false">Show Visible Reviews</a>
}


<table class="table table-dark">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.reviewContent)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.reviewRating)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.hidden)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.reviewContent)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.reviewRating)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.hidden)
                </td>
                <td>
                    @if (item.hidden)
                    {
                        <a href="/reviews/unhide/@item.reviewId?url=/reviews/@item.productId">Unhide Review</a>
                    }
                    else
                    {
                        <a href="/reviews/hide/@item.reviewId?url=/reviews/@item.productId">Hide Review</a>
                    }
                    | <a href="/reviews/view/@item.reviewId">Details</a>
                </td>
            </tr>
        }
    </tbody>
</table>
